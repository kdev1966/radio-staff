user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;  # Masquer la version Nginx

    # Configuration gzip
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml font/truetype font/opentype application/vnd.ms-fontobject image/svg+xml;

    # Rate limiting zones pour prevenir DDoS
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=30r/s;
    limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=50r/s;
    limit_req_zone $binary_remote_addr zone=general_limit:10m rate=100r/s;
    limit_conn_zone $binary_remote_addr zone=conn_limit:10m;

    # Cache pour fichiers statiques
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;

    # Upstreams
    upstream backend {
        server backend:4000;
        keepalive 32;
    }

    upstream frontend {
        server frontend:3000;
        keepalive 32;
    }

    upstream keycloak {
        server keycloak:8080;
        keepalive 16;
    }

    # Configuration HTTP (port 80)
    server {
        listen 80;
        server_name 192.168.1.200 localhost;

        client_max_body_size 20M;
        client_body_timeout 60s;
        client_header_timeout 60s;

        # Limiter le nombre de connexions simultanees par IP
        limit_conn conn_limit 20;

        # Headers de securite globaux
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

        # CSP stricte - A ajuster selon les besoins de l'application
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' http://192.168.1.200; frame-src 'self'; object-src 'none'; base-uri 'self'; form-action 'self';" always;

        # Endpoint de sante pour monitoring
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # API Backend - Rate limiting applique
        location /api/ {
            limit_req zone=api_limit burst=20 nodelay;
            limit_req_status 429;

            proxy_pass http://backend/api/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # Timeouts pour requetes API
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
            proxy_send_timeout 300s;

            # Buffering pour meilleures performances
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
        }

        # Keycloak Auth - Rate limiting pour prevenir attaques brute force
        location /auth/ {
            limit_req zone=auth_limit burst=50 nodelay;
            limit_req_status 429;

            proxy_pass http://keycloak/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_cache_bypass $http_upgrade;

            # Buffering augmente pour Keycloak
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
        }

        # Frontend Next.js - Rate limiting general
        location / {
            limit_req zone=general_limit burst=100 nodelay;

            proxy_pass http://frontend/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Cache agressif pour assets statiques Next.js
        location /_next/static {
            proxy_cache STATIC;
            proxy_pass http://frontend/_next/static;
            add_header Cache-Control "public, max-age=31536000, immutable";
            add_header X-Cache-Status $upstream_cache_status;
        }

        location /static {
            proxy_cache STATIC;
            proxy_pass http://frontend/static;
            add_header Cache-Control "public, max-age=31536000, immutable";
            add_header X-Cache-Status $upstream_cache_status;
        }

        # Bloquer acces aux fichiers sensibles
        location ~ /\.(?!well-known) {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ /\.git {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Pages d'erreur
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }

        error_page 429 /429.html;
        location = /429.html {
            internal;
            return 429 "Too Many Requests - Rate limit exceeded\n";
        }
    }

    # Configuration HTTPS (port 443) - A ACTIVER APRES SETUP CERTBOT
    # Decommenter apres avoir execute le script setup-https.sh
    #
    # server {
    #     listen 443 ssl http2;
    #     server_name 192.168.1.200;
    #
    #     # Certificats SSL Let's Encrypt
    #     ssl_certificate /etc/letsencrypt/live/192.168.1.200/fullchain.pem;
    #     ssl_certificate_key /etc/letsencrypt/live/192.168.1.200/privkey.pem;
    #     ssl_trusted_certificate /etc/letsencrypt/live/192.168.1.200/chain.pem;
    #
    #     # Configuration SSL moderne et securisee
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    #     ssl_prefer_server_ciphers off;
    #
    #     # OCSP Stapling
    #     ssl_stapling on;
    #     ssl_stapling_verify on;
    #     resolver 8.8.8.8 8.8.4.4 valid=300s;
    #     resolver_timeout 5s;
    #
    #     # Session SSL
    #     ssl_session_timeout 1d;
    #     ssl_session_cache shared:SSL:50m;
    #     ssl_session_tickets off;
    #
    #     # HSTS - Force HTTPS pendant 1 an
    #     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    #
    #     client_max_body_size 20M;
    #     client_body_timeout 60s;
    #     client_header_timeout 60s;
    #
    #     limit_conn conn_limit 20;
    #
    #     # Headers de securite globaux (memes que HTTP)
    #     add_header X-Frame-Options "SAMEORIGIN" always;
    #     add_header X-Content-Type-Options "nosniff" always;
    #     add_header X-XSS-Protection "1; mode=block" always;
    #     add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    #     add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    #
    #     # CSP stricte pour HTTPS
    #     add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https://192.168.1.200; frame-src 'self'; object-src 'none'; base-uri 'self'; form-action 'self'; upgrade-insecure-requests;" always;
    #
    #     # Endpoint de sante
    #     location /health {
    #         access_log off;
    #         return 200 "healthy\n";
    #         add_header Content-Type text/plain;
    #     }
    #
    #     # API Backend
    #     location /api/ {
    #         limit_req zone=api_limit burst=20 nodelay;
    #         limit_req_status 429;
    #
    #         proxy_pass http://backend/api/;
    #         proxy_http_version 1.1;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection 'upgrade';
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto https;
    #         proxy_cache_bypass $http_upgrade;
    #
    #         proxy_read_timeout 300s;
    #         proxy_connect_timeout 75s;
    #         proxy_send_timeout 300s;
    #
    #         proxy_buffering on;
    #         proxy_buffer_size 4k;
    #         proxy_buffers 8 4k;
    #         proxy_busy_buffers_size 8k;
    #     }
    #
    #     # Keycloak Auth
    #     location /auth/ {
    #         limit_req zone=auth_limit burst=5 nodelay;
    #         limit_req_status 429;
    #
    #         proxy_pass http://keycloak/;
    #         proxy_http_version 1.1;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection 'upgrade';
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto https;
    #         proxy_set_header X-Forwarded-Host $host;
    #         proxy_cache_bypass $http_upgrade;
    #
    #         proxy_buffer_size 128k;
    #         proxy_buffers 4 256k;
    #         proxy_busy_buffers_size 256k;
    #         proxy_read_timeout 300s;
    #         proxy_connect_timeout 75s;
    #     }
    #
    #     # Frontend Next.js
    #     location / {
    #         limit_req zone=general_limit burst=50 nodelay;
    #
    #         proxy_pass http://frontend/;
    #         proxy_http_version 1.1;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection 'upgrade';
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto https;
    #         proxy_cache_bypass $http_upgrade;
    #     }
    #
    #     # Cache pour assets statiques
    #     location /_next/static {
    #         proxy_cache STATIC;
    #         proxy_pass http://frontend/_next/static;
    #         add_header Cache-Control "public, max-age=31536000, immutable";
    #         add_header X-Cache-Status $upstream_cache_status;
    #     }
    #
    #     location /static {
    #         proxy_cache STATIC;
    #         proxy_pass http://frontend/static;
    #         add_header Cache-Control "public, max-age=31536000, immutable";
    #         add_header X-Cache-Status $upstream_cache_status;
    #     }
    #
    #     # Bloquer fichiers sensibles
    #     location ~ /\.(?!well-known) {
    #         deny all;
    #         access_log off;
    #         log_not_found off;
    #     }
    #
    #     location ~ /\.git {
    #         deny all;
    #         access_log off;
    #         log_not_found off;
    #     }
    #
    #     error_page 500 502 503 504 /50x.html;
    #     location = /50x.html {
    #         root /usr/share/nginx/html;
    #     }
    #
    #     error_page 429 /429.html;
    #     location = /429.html {
    #         internal;
    #         return 429 "Too Many Requests - Rate limit exceeded\n";
    #     }
    # }
    #
    # # Redirection HTTP vers HTTPS
    # server {
    #     listen 80;
    #     server_name 192.168.1.200;
    #
    #     # Exception pour Let's Encrypt ACME challenge
    #     location /.well-known/acme-challenge/ {
    #         root /var/www/certbot;
    #     }
    #
    #     # Redirection permanente vers HTTPS
    #     location / {
    #         return 301 https://$host$request_uri;
    #     }
    # }
}
